// Generated by data binding compiler. Do not edit!
package com.urbanairship.debug.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.urbanairship.debug.R;
import com.urbanairship.debug.deviceinfo.DeviceInfoAttributesViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class UaFragmentDeviceInfoAttributesBinding extends ViewDataBinding {
  @NonNull
  public final Button applyButton;

  @NonNull
  public final EditText keyEditText;

  @NonNull
  public final RadioGroup radioGroup;

  @NonNull
  public final RadioButton removeButton;

  @NonNull
  public final RadioButton setButton;

  @NonNull
  public final EditText valueEditText;

  @Bindable
  protected DeviceInfoAttributesViewModel mViewModel;

  protected UaFragmentDeviceInfoAttributesBinding(Object _bindingComponent, View _root,
      int _localFieldCount, Button applyButton, EditText keyEditText, RadioGroup radioGroup,
      RadioButton removeButton, RadioButton setButton, EditText valueEditText) {
    super(_bindingComponent, _root, _localFieldCount);
    this.applyButton = applyButton;
    this.keyEditText = keyEditText;
    this.radioGroup = radioGroup;
    this.removeButton = removeButton;
    this.setButton = setButton;
    this.valueEditText = valueEditText;
  }

  public abstract void setViewModel(@Nullable DeviceInfoAttributesViewModel viewModel);

  @Nullable
  public DeviceInfoAttributesViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static UaFragmentDeviceInfoAttributesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.ua_fragment_device_info_attributes, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static UaFragmentDeviceInfoAttributesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<UaFragmentDeviceInfoAttributesBinding>inflateInternal(inflater, R.layout.ua_fragment_device_info_attributes, root, attachToRoot, component);
  }

  @NonNull
  public static UaFragmentDeviceInfoAttributesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.ua_fragment_device_info_attributes, null, false, component)
   */
  @NonNull
  @Deprecated
  public static UaFragmentDeviceInfoAttributesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<UaFragmentDeviceInfoAttributesBinding>inflateInternal(inflater, R.layout.ua_fragment_device_info_attributes, null, false, component);
  }

  public static UaFragmentDeviceInfoAttributesBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static UaFragmentDeviceInfoAttributesBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (UaFragmentDeviceInfoAttributesBinding)bind(component, view, R.layout.ua_fragment_device_info_attributes);
  }
}
